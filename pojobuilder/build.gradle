task wrapper(type: Wrapper) { gradleVersion = '2.0' }

apply plugin: 'java'
apply plugin: 'eclipse'

ext {
  eclipseAptFolder = '.apt_generated'
  eclipseSettingsDir = file('.settings')
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    codeGeneration
}

dependencies {
    codeGeneration 'net.karneim:pojobuilder:3.+'
    compile 'net.karneim:pojobuilder:3.+:annotations'
    testCompile 'junit:junit:4.+'
    testCompile 'org.assertj:assertj-core:1.+'
}
compileJava.classpath += configurations.codeGeneration
compileTestJava.classpath += configurations.codeGeneration

eclipse {
  jdt.file.withProperties {
    it['org.eclipse.jdt.core.compiler.processAnnotations'] = 'enabled'
  }
}

tasks.eclipseJdt {
  doFirst {
    def aptPrefs =
      file("${eclipseSettingsDir}/org.eclipse.jdt.apt.core.prefs")
    aptPrefs.parentFile.mkdirs()

    aptPrefs.text = """\
    eclipse.preferences.version=1
    org.eclipse.jdt.apt.aptEnabled=true
    org.eclipse.jdt.apt.genSrcDir=${eclipseAptFolder}
    org.eclipse.jdt.apt.reconcileEnabled=true
    """.stripIndent()

    file('.factorypath').withWriter {
      new groovy.xml.MarkupBuilder(it).'factorypath' {
        project.configurations.codeGeneration.each { dep->
          factorypathentry(
            kind:'EXTJAR',
            id:dep.absolutePath,
            enabled:true,
            runInBatchMode:false
          )
        }
      }
    }
  }
}
